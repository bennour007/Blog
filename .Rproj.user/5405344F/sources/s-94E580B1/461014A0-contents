---
# Documentation: https://sourcethemes.com/academic/docs/managing-content/
title: "Burgers"
subtitle: ""
summary: "Burger-economics, visualization, and a refresher of undergraduate economics"
authors: []
tags: ["TidyTuesday"]
categories: ["TidyTuesday"]
date: 2020-12-29T00:32:02+01:00
lastmod: 2020-12-29T00:32:02+01:00
featured: false
draft: false
# Focal points: Smart, Center, TopLeft, Top, TopRight, Left, Right, BottomLeft, Bottom, BottomRight.
image:
  caption: "No caption needed, artist unknown"
  focal_point: ""
  preview_only: false
projects: []
editor_options: 
  chunk_output_type: console
---

In this post, I will be diving into the big-mac data set from the tidy tuesday project. It has been a while since I've done one of these, so this post will be update through several day as I get through the entire analysis, so bare with me. This time, however, I will try to be more sophisticated code wise and interpretation wise as this data set represent a very interesting economical subject. the PPP: the Purchase Power Parity. 

## Why are we talking about burgers and PPP?

Well, the PPP is usually an index used to compare the purchase power of different nations, using a specific chart of goods that are necessary for the livelihood of people in both countries, these goods include food, rent, services, etc... To simplify this chart and make the comparison universal, what's better than a big-mac to do the job. The folks from The Economist, the data provider, shared this graph as a contextualization to the entire big-mac index: 

insert pic2.png here 

## What the data looks like?

```{r}
library(tidyverse)
library(heatwaveR)
library(widyr)
theme_set(theme_minimal())
```


```{r}
big_mac <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-12-22/big-mac.csv')%>%
  rename(country = "iso_a3") 
```

## Summary statistics of the variables

```{r}
big_mac %>%
  summary()
```

## How to deal with missing values

First, I'd like to start working on a equal time intervals for all the countries. This will allow us to make comparison with each one during that periode when we aggregate and visualize the variables. We will simply drop the missing values. Later we can choose to do something different, like imputing the missing values with Knn.

```{r}
big_mac %>%
  drop_na() %>%
  ggplot(aes(x = date,
             y = local_price)) +
    geom_line(color = "lightpink") +
    #geom_line(aes(y = gdp_dollar), color = "skyblue") +
    theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1)) +
    facet_wrap(~ country, scales = "free_y") +
    labs(title = "Local price of big mac from 2012 to 2020, unadjusted for infaltion")
```

A nice trick that I've seen in the latest David Robinson screencast was basically to organize the countries from the most changing price to the most stable ones, also in order to compare them we will need the lines to start form the same origin of the coordinate, most practically 0. let's do that,

```{r}
big_mac %>%
  drop_na() %>%
  mutate(country = fct_reorder(country, local_price, function(.) max(.) /  min(.))) %>%
  ggplot(aes(x = date,
             y = local_price)) +
    geom_line(color = "lightpink") +
    expand_limits(y = 0) +
    #geom_line(aes(y = gdp_dollar), color = "skyblue") +
    theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1)) +
    facet_wrap(~ country, scales = "free_y") +
    labs(title = "Local price of big mac from 2012 to 2020, unadjusted for infaltion")
```

Now you can see both graphics, I guess the last one is much better, even though I am not 100% satisfied with the way they are stacked together. 

Now, what about the actual price of the big mac at each period? How does the local prices compare to the actual price of the big mac? let's find out : 

```{r}
big_mac %>%
  drop_na() %>%
  mutate(country = fct_reorder(country, local_price, function(.) max(.) /  min(.))) %>%
  ggplot(aes(x = date,
             y = local_price)) +
    geom_line(color = "lightpink") +
    geom_line(aes(y = dollar_price), color = "skyblue") +
    expand_limits(y = 0) +
    theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1)) +
    facet_wrap(~ country, scales = "free_y") +
    labs(title = "Local price vs dollar price of big mac from 2012 to 2020, unadjusted for infaltion")

```

Only Chile, the UK, and the the Eurozone (in agregate) have  local prices of the big mac cheaper than the dollar price between 2012 and 2020. This is interesting, but why is this the case? Does this have anything to do with the exchange rate? Let's find out how the exchange rate change over time induce a change in the burger prices.

```{r}

big_mac %>%
  drop_na() %>%
  mutate(country = fct_reorder(country, local_price, function(.) max(.) /  min(.))) %>%
  ggplot(aes(x = date,
             y = local_price)) +
    geom_line(color = "lightpink") +
    expand_limits(y = 0) +
    geom_line(aes(y = dollar_ex), color = "purple") +
    geom_line(aes(y = dollar_price), color = "skyblue") +
    theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1)) +
    facet_wrap(~ country, scales = "free_y") +
    labs(title = "Local price of big mac from 2012 to 2020, unadjusted for infaltion")
```


Let's get back to the local price, and see if we can figure something if we watch the variation from the adjusted price point: 

```{r}

big_mac %>%
  drop_na() %>%
  mutate(country = fct_reorder(country, local_price, function(.) max(.) /  min(.))) %>%
  ggplot(aes(x = date,
             y = local_price)) +
    geom_line(color = "lightpink") +
    expand_limits(y = 0) +
    geom_line(aes(y = adj_price), color = "purple") +
    #geom_line(aes(y = dollar_price), color = "skyblue") +
    theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1)) +
    facet_wrap(~ country, scales = "free_y") +
    labs(title = "Local vs adjusted prices of the big mac", y = "price")
```

Now, we should figure how the construct the big mac exchange rate, inflation rate, in order to compare how these nations are really doing burger wise : 

```{r}
big_mac %>%
  drop_na() %>%
  mutate(bm_ex = local_price / adj_price) %>%
  mutate(country = fct_reorder(country, bm_ex, function(.) last(.) /  first(.))) %>%
  select(date, country, local_price, dollar_ex, dollar_price, adj_price, bm_ex) %>%
  ggplot(aes(x = date, y = bm_ex)) +
    geom_line(color = "skyblue") +
    geom_line(aes(y = dollar_ex), color = "lightpink") +
    facet_wrap(~ country, scales = "free_y")
  
```

We can see that we got some difference between the dollar exchange rate and the big mac  exchange index, and in order to know which currency is over valued or under valued with respect to the big mac exchange and the dollar exchange indexes. Then which country is which :  

```{r}
big_mac %>%
  drop_na() %>%
  mutate(bm_ex = local_price / adj_price) %>%
  mutate(country = fct_reorder(country, bm_ex, function(.) last(.) /  first(.))) %>%
  select(date, country, local_price, dollar_ex, dollar_price, adj_price, bm_ex) %>%
  mutate(exchange_adjusted_tobigmac = (bm_ex - dollar_ex) / dollar_ex) %>%
  ggplot(aes(x = date, y = exchange_adjusted_tobigmac)) +
    geom_line(color = "lightpink") +
    geom_hline(aes(yintercept = 0), color = "gray") +
    facet_wrap(~ country)

```

This graph shows when a currency is actually over valued or under valued given the bigmac exchange index, we can make this clearer, if we fill the intercections with colors indicating the sense of the value.
  
```{r}
big_mac %>%
  drop_na() %>%
  mutate(bm_ex = local_price / adj_price) %>%
  mutate(country = fct_reorder(country, bm_ex, function(.) last(.) /  first(.))) %>%
  select(date, country, local_price, dollar_ex, dollar_price, adj_price, bm_ex) %>%
  mutate(exchange_adjusted_tobigmac = (bm_ex - dollar_ex) / dollar_ex) %>%
  ggplot(aes(x = date, y = exchange_adjusted_tobigmac)) +
    geom_hline(aes(yintercept = 0), color = "gray") +
    geom_flame(aes(x = date, y2 = exchange_adjusted_tobigmac, y = 0), fill = "hotpink3") +
    geom_flame(aes(x = date, y = exchange_adjusted_tobigmac, y2 = 0), fill = "springgreen") +
    labs(title = "Change of the value of each currency by country to the big mac index.") +
    theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1)) +
    facet_wrap(~ country)
```




